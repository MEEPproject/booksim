// $Id$

// Copyright (c) 2007-2012, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//8X8 mesh with 20 flits per packet under injection mode
//injection rate here is packet per cycle, NOT flit per cycle

// Topology

topology = torus;
k = 8;
n = 2;

// Routing
routing_function = dim_order;


router = fbfcl;
// Flow control
num_vcs     = 1;
vc_buf_size = 10;

credit_delay   = 1;
routing_delay  = 0;
vc_alloc_delay = 1;
sw_alloc_delay = 1;

// Traffic
traffic = uniform;
classes = 2;
packet_size = {1,5};


// Simulation
sim_type = throughput;
//sim_type = latency;

injection_rate = {0.01,0.01};
start_vc = {0,0};
end_vc = {0,0};
sample_period = 10000;
max_samples = 1000;

print_csv_results=1;

//watch_file = packets.input;

//injected_flits_out = injected_flits_out.flits;
//received_flits_out = received_flits_out.flits;
//stored_flits_out = stored_flits_out.flits;
//sent_flits_out = sent_flits_out.flits;
//outstanding_credits_out = outstanding_credits_out.flits;
//ejected_flits_out = ejected_flits_out.flits;
//active_packets_out = active_packets_out.flits;
