// $Id$

// Copyright (c) 2014-2020, Trustees of The University of Cantabria
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//8X8 mesh with 20 flits per packet under injection mode
//injection rate here is packet per cycle, NOT flit per cycle

// Topology

topology = smartcmesh; 
k = {8,8};
n = 2;
c = {1,1};

// Routing
routing_function = dim_order;

// Flow control
router = smart;
smart_type = nebb_vct_opt;
num_vcs     = 3;
start_vc = {0,0,0};
end_vc = {2,2,2};
vc_buf_size = 6;

// Mandatory for lookahead routing and bypass
routing_delay  = 0;
noq            = 0;
// To ensure VCT during injection (TrafficManager)
hold_switch_for_packet = 1;

// Traffic
traffic = uniform;
classes = 3;
packet_size = {3,5,1};
smart_max_hops = 8;
smart_dimensions = oneD;


// Simulation
sim_type = throughput;

injection_rate = {0.9,0.9,0.9};
sample_period=10000;
injection_queue_size=1000;

